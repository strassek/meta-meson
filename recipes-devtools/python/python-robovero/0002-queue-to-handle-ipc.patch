From 099bf933044dae620b09b6c6604e31caed20fd6b Mon Sep 17 00:00:00 2001
From: Kevin Strasser <kevin.strasser@linux.intel.com>
Date: Wed, 24 Oct 2012 18:24:30 -0700
Subject: [PATCH 2/3] internals.py: introduce a queue to handle ipc

the way it was handled before was not thread safe and required
busy waiting in getReturn
---
 robovero/internals.py |   11 ++++-------
 1 file changed, 4 insertions(+), 7 deletions(-)

diff --git a/robovero/internals.py b/robovero/internals.py
index 0222a93..13f5af1 100644
--- a/robovero/internals.py
+++ b/robovero/internals.py
@@ -2,6 +2,7 @@
 """
 
 import threading, serial, time, atexit, os, sys
+import Queue
 import windows
 
 __author__ =      ["Neil MacMunn", "Danny Chan"]
@@ -26,17 +27,13 @@ def listen():
       isrthread.start()
       
     else:
-      robovero.response = message
+      robovero.response.put(message)
 
 def getReturn():
   """Get a return value that the listening thread has received.
   """
   global robovero
-  while robovero.response == None:
-    time.sleep(0)
-  ret = robovero.response
-  robovero.response = None
-  return ret
+  return robovero.response.get()
 
 isr_list = {}
 
@@ -222,7 +219,7 @@ class Robovero(object):
     #  a lock for handling incoming serial data
     self.lock = threading.RLock()
 
-    self.response = None
+    self.response = Queue.Queue()
     self.debug = open("run.log", "w")
 
     self.indices = {} # initialize dictionary
-- 
1.7.9.5

